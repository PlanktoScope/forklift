before:
  hooks:
    - go mod download

builds:
- id: forklift
  main: ./cmd/forklift
  binary: forklift
  ldflags:
    - >-
      -s
      -w
      -X main.buildVersion={{.Version}}
      -X main.buildCommit={{.Commit}}
      -X main.buildCommitTimestamp={{.CommitTimestamp}}
      -X main.buildSummary={{.Summary}}
      -X main.builtBy=goreleaser
  env:
    - CGO_ENABLED=0
  targets:
    - linux_amd64_v1
    - linux_arm64
    - linux_arm_7
    - darwin_amd64_v1
    - darwin_arm64
    - windows_amd64_v1
  overrides:
    - goos: darwin
      goarch: amd64
      goamd64: v1
      env:
        # CGo is needed for github.com/fsnotify/fsevents, which is needed by the Docker Compose CLI
        # (though Forklift doesn't actually need it)
        - CGO_ENABLED=1
        # We use the zig toolchain for convenient and efficient cross-compiling, and so that we
        # don't need QEMU for arm64 builds (which would be needed by goreleaser-cross):
        - ZIG_GLOBAL_CACHE_DIR={{ .Env.ZIG_GLOBAL_CACHE_DIR }}
        - ZIG_LOCAL_CACHE_DIR={{ .Env.ZIG_LOCAL_CACHE_DIR }}
        - >-
            CC={{ .Env.ZIG_CC_COMMAND }}
              -target x86_64-macos
              --sysroot={{ .Env.MACOS_SDK }}
              -I{{ .Env.MACOS_SDK }}/usr/include
              -L{{ .Env.MACOS_SDK }}/usr/lib
              -F{{ .Env.MACOS_SDK }}/System/Library/Frameworks
              -framework CoreFoundation
              -Wno-nullability-completeness
              -Wno-expansion-to-defined
              -Wno-macro-redefined
        - >-
            CXX={{ .Env.ZIG_CC_COMMAND }}
              -target x86_64-macos
              --sysroot={{ .Env.MACOS_SDK }}
              -I{{ .Env.MACOS_SDK }}/usr/include
              -L{{ .Env.MACOS_SDK }}/usr/lib
              -F{{ .Env.MACOS_SDK }}/System/Library/Frameworks
              -framework CoreFoundation
              -Wno-nullability-completeness
              -Wno-expansion-to-defined
              -Wno-macro-redefined
    - goos: darwin
      goarch: arm64
      env:
        # CGo is needed for github.com/fsnotify/fsevents, which is needed by the Docker Compose CLI
        # (though Forklift doesn't actually need it)
        - CGO_ENABLED=1
        # We use the zig toolchain for convenient and efficient cross-compiling, and so that we
        # don't need QEMU for arm64 builds (which would be needed by goreleaser-cross):
        - ZIG_GLOBAL_CACHE_DIR={{ .Env.ZIG_GLOBAL_CACHE_DIR }}
        - ZIG_LOCAL_CACHE_DIR={{ .Env.ZIG_LOCAL_CACHE_DIR }}
        - >-
            CC={{ .Env.ZIG_CC_COMMAND }}
              -target aarch64-macos
              --sysroot={{ .Env.MACOS_SDK }}
              -I{{ .Env.MACOS_SDK }}/usr/include
              -L{{ .Env.MACOS_SDK }}/usr/lib
              -F{{ .Env.MACOS_SDK }}/System/Library/Frameworks
              -framework CoreFoundation
              -Wno-nullability-completeness
              -Wno-expansion-to-defined
              -Wno-macro-redefined
        - >-
            CXX={{ .Env.ZIG_CC_COMMAND }}
              -target aarch64-macos
              --sysroot={{ .Env.MACOS_SDK }}
              -I{{ .Env.MACOS_SDK }}/usr/include
              -L{{ .Env.MACOS_SDK }}/usr/lib
              -F{{ .Env.MACOS_SDK }}/System/Library/Frameworks
              -framework CoreFoundation
              -Wno-nullability-completeness
              -Wno-expansion-to-defined
              -Wno-macro-redefined

archives:
  - id: forklift
    builds: ["forklift"]
    name_template: "forklift_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    format_overrides:
    - goos: windows
      format: zip

release:
  github:
  prerelease: auto

dockers:
  # forklift
  - id: forklift-amd64
    ids:
      - forklift
    dockerfile: "Dockerfile"
    use: buildx
    image_templates:
    - "ghcr.io/planktoscope/forklift:latest-amd64"
    - "ghcr.io/planktoscope/forklift:{{ .Major }}-amd64"
    - "ghcr.io/planktoscope/forklift:{{ .Major }}.{{ .Minor }}-amd64"
    - "ghcr.io/planktoscope/forklift:{{ .Major }}.{{ .Minor }}.{{ .Patch }}-amd64"
    build_flag_templates:
    - "--pull"
    - "--platform=linux/amd64"
    - "--label=org.opencontainers.image.created={{.Date}}"
    - "--label=org.opencontainers.image.name={{.ProjectName}}"
    - "--label=org.opencontainers.image.revision={{.FullCommit}}"
    - "--label=org.opencontainers.image.version={{.Version}}"
    - "--label=org.opencontainers.image.source={{.GitURL}}"
    - "--label=org.opencontainers.image.licenses=(Apache-2.0 OR BlueOak-1.0.0)"
  - id: forklift-arm64v8
    ids:
      - forklift
    dockerfile: "Dockerfile"
    use: buildx
    goarch: arm64
    image_templates:
    - "ghcr.io/planktoscope/forklift:latest-arm64v8"
    - "ghcr.io/planktoscope/forklift:{{ .Major }}-arm64v8"
    - "ghcr.io/planktoscope/forklift:{{ .Major }}.{{ .Minor }}-arm64v8"
    - "ghcr.io/planktoscope/forklift:{{ .Major }}.{{ .Minor }}.{{ .Patch }}-arm64v8"
    build_flag_templates:
    - "--pull"
    - "--platform=linux/arm64/v8"
    - "--label=org.opencontainers.image.created={{.Date}}"
    - "--label=org.opencontainers.image.name={{.ProjectName}}"
    - "--label=org.opencontainers.image.revision={{.FullCommit}}"
    - "--label=org.opencontainers.image.version={{.Version}}"
    - "--label=org.opencontainers.image.source={{.GitURL}}"
    - "--label=org.opencontainers.image.licenses=(Apache-2.0 OR BlueOak-1.0.0)"
  - id: forklift-armv7
    ids:
      - forklift
    dockerfile: "Dockerfile"
    use: buildx
    goarch: arm
    goarm: 7
    image_templates:
    - "ghcr.io/planktoscope/forklift:latest-armv7"
    - "ghcr.io/planktoscope/forklift:{{ .Major }}-armv7"
    - "ghcr.io/planktoscope/forklift:{{ .Major }}.{{ .Minor }}-armv7"
    - "ghcr.io/planktoscope/forklift:{{ .Major }}.{{ .Minor }}.{{ .Patch }}-armv7"
    build_flag_templates:
    - "--pull"
    - "--platform=linux/arm/v7"
    - "--label=org.opencontainers.image.created={{.Date}}"
    - "--label=org.opencontainers.image.name={{.ProjectName}}"
    - "--label=org.opencontainers.image.revision={{.FullCommit}}"
    - "--label=org.opencontainers.image.version={{.Version}}"
    - "--label=org.opencontainers.image.source={{.GitURL}}"
    - "--label=org.opencontainers.image.licenses=(Apache-2.0 OR BlueOak-1.0.0)"

docker_manifests:
  # forklift
  - name_template: "ghcr.io/planktoscope/forklift:latest"
    image_templates:
      - "ghcr.io/planktoscope/forklift:latest-amd64"
      - "ghcr.io/planktoscope/forklift:latest-arm64v8"
      - "ghcr.io/planktoscope/forklift:latest-armv7"
  - name_template: "ghcr.io/planktoscope/forklift:{{ .Major }}"
    image_templates:
      - "ghcr.io/planktoscope/forklift:{{ .Major }}-amd64"
      - "ghcr.io/planktoscope/forklift:{{ .Major }}-arm64v8"
      - "ghcr.io/planktoscope/forklift:{{ .Major }}-armv7"
  - name_template: "ghcr.io/planktoscope/forklift:{{ .Major }}.{{ .Minor }}"
    image_templates:
      - "ghcr.io/planktoscope/forklift:{{ .Major }}.{{ .Minor }}-amd64"
      - "ghcr.io/planktoscope/forklift:{{ .Major }}.{{ .Minor }}-arm64v8"
      - "ghcr.io/planktoscope/forklift:{{ .Major }}.{{ .Minor }}-armv7"
  - name_template: "ghcr.io/planktoscope/forklift:{{ .Major }}.{{ .Minor }}.{{ .Patch }}"
    image_templates:
      - "ghcr.io/planktoscope/forklift:{{ .Major }}.{{ .Minor }}.{{ .Patch }}-amd64"
      - "ghcr.io/planktoscope/forklift:{{ .Major }}.{{ .Minor }}.{{ .Patch }}-arm64v8"
      - "ghcr.io/planktoscope/forklift:{{ .Major }}.{{ .Minor }}.{{ .Patch }}-armv7"
